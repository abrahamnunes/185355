// Hyperparams
N_RUNS = 14
TREATMENT = 0     // either 0 for ctrl, or 1 for Li

// Load cell templates and network

strdef hc_ctrl, hc_litm, li_ctrl, li_litm, nr_ctrl, nr_litm
hc_ctrl = "HC_CTRL"
hc_litm = "HC_LITM"
li_ctrl = "LR_CTRL"
li_litm = "LR_LITM"
nr_ctrl = "NR_CTRL"
nr_litm = "NR_LITM"
strdef gcmodel

err_ = load_file("objects/BC.hoc")
err_ = load_file("objects/MC.hoc")
err_ = load_file("objects/HIPP.hoc")
err_ = load_file("objects/PP.hoc")

// Instantiate cell objects and labels
objref hcc, hcl, lrc, lrl, nrc, nrl
strdef hcclab, hcllab, lrclab, lrllab, nrclab, nrllab

// Do N_RUNS Runs for each network setting
// TODO: look for cleaner solution for repeatedly loading DentateGyrus.hoc. 
//       See "iteratortest.hoc" for potential solution that needs more work...
//       NOTE: below does not work either! 


sprint(gcmodel, "objects/GC_%s.hoc", nr_ctrl)
err_ = load_file(gcmodel)
err_ = load_file("objects/DentateGyrus.hoc")


for random_state = 1, N_RUNS {
    
    sprint(nrclab, "%s-%d", "NR_CTRL", random_state)
    nrc = new DentateGyrus(nrclab, random_state, "NR_CTRL")
    print "RUNNING DENTATE GYRUS ", nrclab
    nrc.run()

}

