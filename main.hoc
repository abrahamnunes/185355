N_RUNS = 3
// Load cell templates and network
err_ = load_file("objects/GC.hoc")
err_ = load_file("objects/BC.hoc")
err_ = load_file("objects/MC.hoc")
err_ = load_file("objects/HIPP.hoc")
err_ = load_file("objects/PP.hoc")
err_ = load_file("objects/DentateGyrus.hoc")

// Instantiate cell objects and labels
objref hcc, hcl, lrc, lrl, nrc, nrl
strdef hcclab, hcllab, lrclab, lrllab, nrclab, nrllab

// Do 10 Runs for each network setting
for random_state = 1, N_RUNS {
    //sprint(hcclab, "%s-%d", "HC_CTRL", random_state)
    sprint(hcllab, "%s-%d", "HC_LITM", random_state)
    //sprint(lrclab, "%s-%d", "LR_CTRL", random_state)
    sprint(lrllab, "%s-%d", "LR_LITM", random_state)
    //sprint(nrclab, "%s-%d", "NR_CTRL", random_state)
    sprint(nrllab, "%s-%d", "NR_LITM", random_state)
    //hcc = new DentateGyrus(hcclab, random_state, "HC_CTRL")
    hcl = new DentateGyrus(hcllab, random_state, "HC_LITM")
    //lrc = new DentateGyrus(lrclab, random_state, "LR_CTRL")
    lrl = new DentateGyrus(lrllab, random_state, "LR_LITM")
    //nrc = new DentateGyrus(nrclab, random_state, "NR_CTRL")
    nrl = new DentateGyrus(nrllab, random_state, "NR_LITM")

    //print "RUNNING DENTATE GYRUS ", hcclab
    //hcc.run()

    print "RUNNING DENTATE GYRUS ", hcllab
    hcl.run()

    //print "RUNNING DENTATE GYRUS ", lrclab
    //lrc.run()

    print "RUNNING DENTATE GYRUS ", lrllab
    lrl.run()

    //print "RUNNING DENTATE GYRUS ", nrclab
    //nrc.run()

    print "RUNNING DENTATE GYRUS ", nrllab
    nrl.run()
}
