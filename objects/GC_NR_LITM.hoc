/**********************       GRANULE CELL         ****************************************

    // extracted from
    // Dentate gyrus network model 
    // Santhakumar V, Aradi I, Soltesz I (2005) J Neurophysiol 93:437-53 
    // https://senselab.med.yale.edu/ModelDB/showModel.cshtml?model=51781&file=\dentategyrusnet2005\DG500_M7.hoc

    // ModelDB file along with publication:
    // Yim MY, Hanuschkin A, Wolfart J (2015) Hippocampus 25:297-308.
    // http://onlinelibrary.wiley.com/doi/10.1002/hipo.22373/abstract

    // modified and augmented by
    // Abraham Nunes / 2022
    // Man Yi Yim / 2015
    // Alexander Hanuschkin / 2011


        TODO: 
            - Pass ndend1/2 as arguments
            - Allow for creation of more than just 2 dendrites

    */

    begintemplate GranuleCell

        ndend1=4
        ndend2=4
        public  pre_list, connect_pre, subsets, is_art, is_connected
        public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
        public soma, gcdend1, gcdend2
        public all, gcldend, pdend, mdend, ddend
        objref all, gcldend, pdend, mdend, ddend

        create soma, gcdend1[ndend1], gcdend2[ndend2]
        objref syn, pre_list

        //to include steady state current injection
        nst=1
        objectvar stim[nst]
        public stim
        // double stimdur[nst], stimdel[nst], stimamp[nst]
        // public stim, stimdur, stimamp, stimdel

        proc init() {
            // Process input arguments 
            // This is ridiculous. There must be a cleaner way. [ TODO ]
            narg = numarg()
            cell_index = $1
            scale_ka_conductances = 1
            scale_km_conductances = 1
            gbar_ht_ = 0 
            gbar_lt_ = 0
            scale_size_ = 1
            scale_gabaa_ = 1
            scale_kir_ = 0
            if (narg > 1) { scale_ka_conductances = $2 }
            if (narg > 2) { scale_km_conductances = $3 }
            if (narg > 3) { gbar_ht_ = $4 }
            if (narg > 4) { gbar_lt_ = $5 }
            if (narg > 5) { scale_size_ = $6 }
            if (narg > 6) { scale_gabaa_ = $7 }
            if (narg > 7) { scale_kir_ = $8 }

            // Run actual initialization 
            pre_list = new List()
            subsets()
            gctemp()
            synapse()
        }

        proc subsets(){ local i
            all = new SectionList()
                soma all.append()
                for i=0, 3 gcdend1 [i] all.append()
                for i=0, 3 gcdend2 [i] all.append()

            gcldend  = new SectionList()
                gcdend1 [0] gcldend.append()
                gcdend2 [0] gcldend.append()

            pdend  = new SectionList()
                gcdend1 [1] pdend.append()
                gcdend2 [1] pdend.append()

            mdend  = new SectionList()
                gcdend1 [2] mdend.append()
                gcdend2 [2] mdend.append()

            ddend  = new SectionList()
                gcdend1 [3] ddend.append()
                gcdend2 [3] ddend.append()
        }
        proc gctemp() {

            scale_area = 1./1.13 * scale_size_

            // ********** Parameters for reversal potentials (assigned below) *********
            e_gabaa_ 	= -70.			// reversal potential GABAA

            // ***************** Parameters
            g_pas_fit_ 	= 1.44e-05 
            gkbar_kir_fit_  = 1.44e-05 * scale_kir_
            ggabaabar_fit_  = 0.722e-05 * scale_gabaa_

            // *********************** PAS ******************************************
            cm_fit_ 	=  1.			
            Ra_fit_ 	=  184. 			// fitted

            // *********************** KIR *****************************************
            vhalfl_kir_fit_ = -98.923594  	// for Botzman I/V curve, fitted
            kl_kir_fit_     = 10.888538 	// for Botzman I/V curve, fitted
            q10_kir_fit_    = 1.			// temperature factor, set to 1
            vhalft_kir_fit_ = 67.0828       // 3 values for tau func from Stegen et al. 2011
            at_kir_fit_     = 0.00610779
            bt_kir_fit_     = 0.0817741

            // ********************* Neuron Morphology etc ***************************
            LJP_ 		= -10.			// Liquid junction potential [mV]
            V_rest 		= -68.16+LJP_   // resting potential [mV]
            V_init 		= -68.16+LJP_   // initial potential [mV]

            // ******************** GABAA ******************** 
            e_pas_fit_	= -83.8
            e_pas_fit_Dend 	= -81.74

            soma {nseg=1 L=16.8*scale_area diam=16.8*scale_area} // changed L & diam
                
            gcdend1 [0] {nseg=1 L=50*scale_area diam=3*scale_area}
            for i = 1, 3	gcdend1 [i] {nseg=1 L=150*scale_area diam=3*scale_area}

            gcdend2 [0] {nseg=1 L=50*scale_area diam=3*scale_area}
            for i = 1, 3	gcdend2 [i] {nseg=1 L=150*scale_area diam=3*scale_area}	

            forsec all {
                insert ccanl
                    catau_ccanl = 10
                    caiinf_ccanl = 5.e-6
                insert HT 
                    gbar_HT = gbar_ht_
                    kan_HT = 0.5
                    kbn_HT = 0.3
                insert LT
                    gbar_LT = gbar_lt_
                Ra=Ra_fit_
            }

            soma {insert bk 						
                    gkbar_bk = 0.00036609754167888492                               // fitted to iPSC [SS]
                insert ichan2  						
                    gnatbar_ichan2 = 0.30382538214974524893                          // fitted to iPSC [SS]
                    el_ichan2 = e_pas_fit_				            // set leak reversal poti to gain Vrest of cell <ah>
                    vshiftma_ichan2 = 67.29851063919572595751                         // fitted to iPSC [SS]
                    vshiftmb_ichan2 = 23.47095335846364605459                         // fitted to iPSC [SS]
                    vshiftha_ichan2 = 118.87882140094222904736                         // fitted to iPSC [SS]
                    vshifthb_ichan2 = 22.72663207632274762204                         // fitted to iPSC [SS]
                    vshiftnfa_ichan2 = 33.30911097464424841519                        // fitted to iPSC [SS]
                    vshiftnfb_ichan2 = 76.56629644409436252772                        // fitted to iPSC [SS]
                    vshiftnsa_ichan2 = 43.38534894819657949938                        // fitted to iPSC [SS]
                    vshiftnsb_ichan2 = 107.92862157059448691143                        // fitted to iPSC [SS]
                    gkfbar_ichan2 = 0.02959266830902676504                           // fitted to iPSC [SS]
                    gksbar_ichan2 = 0.00089829523855913590                           // fitted to iPSC [SS]
                    gl_ichan2 = 0.00001482952021232379                               // fitted to iPSC [SS]
                insert lca 						
                    glcabar_lca = 0.00255351892233713837                             // fitted to iPSC [SS]
                insert nca  						
                    gncabar_nca = 0.00019822407216141575                             // fitted to iPSC [SS]                 
                insert sk						
                    gskbar_sk = 0.00051118925530526131                               // fitted to iPSC [SS]
                insert tca						
                    gcatbar_tca = 0.00000193161941306084                             // fitted to iPSC [SS]
                insert ka 						
                    gkabar_ka = 0.012 * scale_ka_conductances       // Yim et al.
                insert km
                    gbar_km = 0.001 * scale_km_conductances         // Yim et al.
                cm=cm_fit_
            } 

            forsec gcldend { 
                // all values fitted to iPSC except cm [SS]
                insert bk 						
                    gkbar_bk = 0.00043569687585868756                                
                insert ichan2  						
                    gnatbar_ichan2 = 0.00587566700903554423                          
                    el_ichan2 = e_pas_fit_				            // set leak reversal poti to gain Vrest of cell <ah>
                    vshiftma_ichan2 = 72.00908352837669212931                       
                    vshiftmb_ichan2 = 10.05866287297631878062           
                    vshiftha_ichan2 = 105.82526035660306718000            
                    vshifthb_ichan2 = 16.07700513630057770342           
                    vshiftnfa_ichan2 = 26.69303619146630168757                 
                    vshiftnfb_ichan2 = 20.32044322166495575743                      
                    vshiftnsa_ichan2 = 36.39794892716360408258                     
                    vshiftnsb_ichan2 = 55.50669569855109841683             
                    gkfbar_ichan2 = 0.00604530884973730146
                    gksbar_ichan2 = 0.00722289049440019357
                    gl_ichan2 = 0.00002443855292375595
                insert lca 						
                    glcabar_lca = 0.00238773027021453111
                insert nca  						
                    gncabar_nca = 0.00107884546982767800
                insert sk						
                    gskbar_sk = 0.00012346487525245479
                insert tca						
                    gcatbar_tca = 0.00002366405892739300
                cm=cm_fit_
            }
                
            forsec pdend {
                // all values fitted to iPSC except cm [SS]
                insert bk 						
                    gkbar_bk = 0.00190061289795323031
                insert ichan2  						
                    gnatbar_ichan2 = 0.02417375891213749753
                    el_ichan2 = e_pas_fit_				            // set leak reversal poti to gain Vrest of cell <ah>
                    vshiftma_ichan2 = 35.73928645034203555042                       
                    vshiftmb_ichan2 = 8.64376377434796161481           
                    vshiftha_ichan2 = 116.92605508197789276892            
                    vshifthb_ichan2 = 5.98516212833397798221           
                    vshiftnfa_ichan2 = 33.04698698782424060028                 
                    vshiftnfb_ichan2 = 44.25661422225875440972                      
                    vshiftnsa_ichan2 = 50.93545152479049420435                     
                    vshiftnsb_ichan2 = 61.79259722382041530864             
                    gkfbar_ichan2 = 0.00331335014246558453
                    gksbar_ichan2 = 0.00821248429069832732
                    gl_ichan2 = 0.00004203000622739663
                insert lca 						
                    glcabar_lca = 0.00268616527884109162
                insert nca  						
                    gncabar_nca = 0.00099715092192572351
                insert sk						
                    gskbar_sk = 0.00009965352319819307
                insert tca						
                    gcatbar_tca = 0.00045442618393490557
                cm=cm_fit_*1.6
            }
                
            forsec mdend {
                // all values fitted to iPSC except cm [SS]
                insert bk 						
                    gkbar_bk = 0.00155438620883594880
                insert ichan2  						
                    gnatbar_ichan2 = 0.01092949038241916061
                    el_ichan2 = e_pas_fit_				            // set leak reversal poti to gain Vrest of cell <ah>
                    vshiftma_ichan2 = 53.42393602450565737172                       
                    vshiftmb_ichan2 = 26.31602077683473694947           
                    vshiftha_ichan2 = 71.56344028728052819588            
                    vshifthb_ichan2 = 5.10487127392129202974           
                    vshiftnfa_ichan2 = 23.30935492611515869044                 
                    vshiftnfb_ichan2 = 81.83265112336158608741                      
                    vshiftnsa_ichan2 = 19.76201462459690461060                     
                    vshiftnsb_ichan2 = 83.33946866528904706684             
                    gkfbar_ichan2 = 0.00117364421069368272
                    gksbar_ichan2 = 0.00588083391646980393
                    gl_ichan2 = 0.00001327627437971709
                insert lca 						
                    glcabar_lca = 0.00016453535694872594
                insert nca  						
                    gncabar_nca = 0.00140331052932918601
                insert sk						
                    gskbar_sk = 0.00000000000000000000
                insert tca						
                    gcatbar_tca = 0.00045539566021616032
                cm=cm_fit_*1.6
            }

            forsec ddend {
                // all values fitted to iPSC except cm [SS]
                insert bk 						
                    gkbar_bk = 0.00416445454329038029
                insert ichan2  						
                    gnatbar_ichan2 = 0.00000000000000000000
                    el_ichan2 = e_pas_fit_				            // set leak reversal poti to gain Vrest of cell <ah>
                    vshiftma_ichan2 = 62.09792868319234315777                       
                    vshiftmb_ichan2 = 23.33265723737859431708           
                    vshiftha_ichan2 = 82.64902797714709947741            
                    vshifthb_ichan2 = 11.90267377608926580024           
                    vshiftnfa_ichan2 = 10.17372302817697971022                 
                    vshiftnfb_ichan2 = 20.52908377932466521543                      
                    vshiftnsa_ichan2 = 27.76758550795040747516                     
                    vshiftnsb_ichan2 = 65.82531822034421509215             
                    gkfbar_ichan2 = 0.00036926305629303115
                    gksbar_ichan2 = 0.00620601662772069223
                    gl_ichan2 = 0.00004338333500614437
                insert lca 						
                    glcabar_lca = 0.00000000000000000000
                insert nca  						
                    gncabar_nca = 0.00033063009592414682
                insert sk						
                    gskbar_sk = 0.00000000000000000000
                insert tca						
                    gcatbar_tca = 0.00185425322596450442
                cm=cm_fit_*1.6
            }
                
            
            connect gcdend1[0](0), soma(1)
            connect gcdend2[0](0), soma(1)
            for i=1,3 {
                connect gcdend1[i](0), gcdend1[i-1](1)
            }
            for i=1,3 {
                connect gcdend2[i](0), gcdend2[i-1](1)
            }

            forsec all {
                insert kir						// kir conductance added in Yim et al. 2015, note that eK=-90mV is used instead of -105mV as reported in the paper <ah>
                    gkbar_kir       =       gkbar_kir_fit_
                    vhalfl_kir      =       vhalfl_kir_fit_
                    kl_kir          =       kl_kir_fit_
                    vhalft_kir      =       vhalft_kir_fit_
                    at_kir          =       at_kir_fit_
                    bt_kir          =       bt_kir_fit_
                    ggabaa_ichan2 	= 	ggabaabar_fit_		// added GabaA in Yim et al. 2015 <ah> 
                    egabaa_ichan2 	= 	e_gabaa_		// reversal potential GABAA added in Yim et al. 2015 <ah>
                    ena 		    = 	50	        // ena was unified from enat=55 (BC, HIPP, MC) and enat=45 (GC) in Santhakumar et al. (2005) <ah>
                    ek		        =	-90		        // simplified ekf=eks=ek=esk; note the eK was erroneously reported as -105mV in the Yim et al. 2015 <ah>
                    cao_ccanl	    =	2 }
    } // end of gctemp()

        // Retrieval of objref arguments uses the syntax: $o1, $o2, ..., $oi.
        // http://web.mit.edu/neuron_v7.1/doc/help/neuron/general/ocsyntax.html#arguments
        proc connect_pre() {  
            soma $o2 = new NetCon (&v(1), $o1)
        }


        // Define synapses on to GCs using 
        //- an Exp2Syn object (parameters tau1 -rise, tau2 -decay, 
        // time constant [ms] and e - rev potential [mV]
        // delay [ms] and weight -variable betw 0 and 1 [1 corresponding to 1 'S]

        proc synapse() {
            gcdend1[3] syn = new Exp2Syn(0.5) // PP syn based on data from Greg Hollrigel and Kevin Staley   <AH> NOTE: both synapses are identical!
            syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0
            pre_list.append(syn)

            gcdend2[3] syn = new Exp2Syn(0.5) // PP syn based on Greg and Staley
            syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0
            pre_list.append(syn)

            gcdend1[1] syn = new Exp2Syn(0.5) // MC syn *** Estimated
            syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0
            pre_list.append(syn)

            gcdend2[1] syn = new Exp2Syn(0.5) // MC syn   *** Estimated
            syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0
            pre_list.append(syn)

            gcdend1[3] syn = new Exp2Syn(0.5) // HIPP  syn based on Harney and Jones corrected for temp
            syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70
            pre_list.append(syn)

            gcdend2[3] syn = new Exp2Syn(0.5) // HIPP syn based on Harney and Jones corrected for temp
            syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70
            pre_list.append(syn)

            soma syn = new Exp2Syn(0.5) // BC  syn  based on Bartos
            syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70
            pre_list.append(syn)

            gcdend1[1] syn = new Exp2Syn(0.5) 								// NOTE: SPROUTED SYNAPSE based on Molnar and Nadler
            syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0
            pre_list.append(syn)

            gcdend2[1] syn = new Exp2Syn(0.5) 								// NOTE: SPROUTED SYNAPSE
            syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0
            pre_list.append(syn)

            // Total of 7 synapses per GC 0,1 PP; 	2,3 MC;	4,5 HIPP and 	6 BC	7,8 Sprout
        }

        func is_art() { return 0 }

    endtemplate GranuleCell
        
        